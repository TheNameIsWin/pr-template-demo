name: PR Template Selector

on:
  pull_request:
    types: [opened, edited]

permissions:
  issues: write
  pull-requests: write

jobs:
  template-selector:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine template
        id: template
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          # Check if changes are in frontend folder (including subdirectories)
          if echo "$CHANGED_FILES" | grep -q "^frontend/"; then
            echo "template=frontend" >> $GITHUB_OUTPUT
            echo "🎨 Frontend changes detected - using frontend template"
          # Check if changes are in backend folder (including subdirectories)
          elif echo "$CHANGED_FILES" | grep -q "^backend/"; then
            echo "template=backend" >> $GITHUB_OUTPUT
            echo "⚙️ Backend changes detected - using backend template"
          # Check for frontend file extensions
          elif echo "$CHANGED_FILES" | grep -qE "\.(jsx?|tsx?|css|scss|html|vue|svelte)$"; then
            echo "template=frontend" >> $GITHUB_OUTPUT
            echo "🎨 Frontend file types detected - using frontend template"
          # Check for backend file extensions
          elif echo "$CHANGED_FILES" | grep -qE "\.(js|ts|py|java|go|php|rb)$"; then
            echo "template=backend" >> $GITHUB_OUTPUT
            echo "⚙️ Backend file types detected - using backend template"
          else
            echo "template=default" >> $GITHUB_OUTPUT
            echo "📝 Using default template"
          fi

      - name: Update PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const template = '${{ steps.template.outputs.template }}';
            
            // Get current PR
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            let newDescription = '';
            let message = '';
            
            if (template === 'frontend') {
              newDescription = '# 🎨 Frontend Pull Request\n\n' +
                '## 📋 Description\n' +
                'Brief description of the frontend changes in this PR.\n\n' +
                '---\n\n' +
                '## 🎯 Type of Change\n' +
                '- [ ] 🐛 Bug fix\n' +
                '- [ ] ✨ New feature\n' +
                '- [ ] 💄 UI/UX improvement\n' +
                '- [ ] 🔧 Refactoring\n' +
                '- [ ] 📱 Responsive design\n' +
                '- [ ] ⚡ Performance optimization\n' +
                '- [ ] 🧪 Testing\n\n' +
                '## 🖼️ UI Changes\n' +
                '- [ ] Screenshots added\n' +
                '- [ ] Mobile responsive\n' +
                '- [ ] Cross-browser tested\n' +
                '- [ ] Accessibility checked\n\n' +
                '## 📱 Browser Support\n' +
                '- [ ] Chrome\n' +
                '- [ ] Firefox\n' +
                '- [ ] Safari\n' +
                '- [ ] Edge\n\n' +
                '## 📸 Screenshots\n' +
                '<!-- Add screenshots here if applicable -->\n\n' +
                '## 🧪 Testing\n' +
                '- [ ] Unit tests added/updated\n' +
                '- [ ] Integration tests added/updated\n' +
                '- [ ] Manual testing completed\n' +
                '- [ ] Browser compatibility tested\n\n' +
                '## 🔗 Related Issues\n' +
                'Closes #(issue number)\n\n' +
                '## 📝 Additional Notes\n' +
                'Any additional information or context about this PR.';
              
              message = `🎨 **Frontend Template Applied!**
              
              Your PR description has been automatically updated with the **Frontend Template**.
              
              **What's included:**
              - Frontend-specific checkboxes
              - UI/UX requirements
              - Browser compatibility testing
              - Screenshot requirements`;
              
            } else if (template === 'backend') {
              newDescription = '# ⚙️ Backend Pull Request\n\n' +
                '## 📋 Description\n' +
                'Brief description of the backend changes in this PR.\n\n' +
                '---\n\n' +
                '## 🎯 Type of Change\n' +
                '- [ ] 🐛 Bug fix\n' +
                '- [ ] ✨ New feature\n' +
                '- [ ] 🔧 Refactoring\n' +
                '- [ ] ⚡ Performance optimization\n' +
                '- [ ] 🔒 Security improvement\n' +
                '- [ ] 📊 Database changes\n' +
                '- [ ] 🔌 API changes\n' +
                '- [ ] 🧪 Testing\n\n' +
                '## 🗄️ Database Changes\n' +
                '- [ ] Migration files added\n' +
                '- [ ] Database schema updated\n' +
                '- [ ] Data migration required\n' +
                '- [ ] Rollback plan documented\n\n' +
                '## 🔌 API Changes\n' +
                '- [ ] New endpoints added\n' +
                '- [ ] Existing endpoints modified\n' +
                '- [ ] API documentation updated\n' +
                '- [ ] Breaking changes documented\n\n' +
                '## 🔒 Security\n' +
                '- [ ] Input validation added\n' +
                '- [ ] Authentication/Authorization checked\n' +
                '- [ ] SQL injection prevention\n' +
                '- [ ] XSS prevention\n\n' +
                '## 📊 Performance\n' +
                '- [ ] Database queries optimized\n' +
                '- [ ] Caching implemented\n' +
                '- [ ] Memory usage checked\n' +
                '- [ ] Response time improved\n\n' +
                '## 🧪 Testing\n' +
                '- [ ] Unit tests added/updated\n' +
                '- [ ] Integration tests added/updated\n' +
                '- [ ] API tests added/updated\n' +
                '- [ ] Load testing completed\n\n' +
                '## 🔗 Related Issues\n' +
                'Closes #(issue number)\n\n' +
                '## 📝 Additional Notes\n' +
                'Any additional information or context about this PR.';
              
              message = `⚙️ **Backend Template Applied!**
              
              Your PR description has been automatically updated with the **Backend Template**.
              
              **What's included:**
              - Backend-specific checkboxes
              - Database change tracking
              - API documentation requirements
              - Security checklist`;
              
            } else {
              newDescription = '# 🚀 Mixed Changes Pull Request\n\n' +
                '## 📋 Description\n' +
                'Brief description of the changes in this PR.\n\n' +
                '---\n\n' +
                '## 🎨 Frontend Changes\n' +
                '*Fill this section if you have frontend changes*\n\n' +
                '### 🎯 Type of Change\n' +
                '- [ ] 🐛 Bug fix\n' +
                '- [ ] ✨ New feature\n' +
                '- [ ] 💄 UI/UX improvement\n' +
                '- [ ] 🔧 Refactoring\n' +
                '- [ ] 📱 Responsive design\n' +
                '- [ ] ⚡ Performance optimization\n\n' +
                '### 🖼️ UI Changes\n' +
                '- [ ] Screenshots added\n' +
                '- [ ] Mobile responsive\n' +
                '- [ ] Cross-browser tested\n' +
                '- [ ] Accessibility checked\n\n' +
                '---\n\n' +
                '## ⚙️ Backend Changes\n' +
                '*Fill this section if you have backend changes*\n\n' +
                '### 🎯 Type of Change\n' +
                '- [ ] 🐛 Bug fix\n' +
                '- [ ] ✨ New feature\n' +
                '- [ ] 🔧 Refactoring\n' +
                '- [ ] ⚡ Performance optimization\n' +
                '- [ ] 🔒 Security improvement\n' +
                '- [ ] 📊 Database changes\n' +
                '- [ ] 🔌 API changes\n\n' +
                '### 🗄️ Database Changes\n' +
                '- [ ] Migration files added\n' +
                '- [ ] Database schema updated\n' +
                '- [ ] Data migration required\n' +
                '- [ ] Rollback plan documented\n\n' +
                '---\n\n' +
                '## 🧪 Testing\n' +
                '- [ ] Unit tests added/updated\n' +
                '- [ ] Integration tests added/updated\n' +
                '- [ ] Manual testing completed\n\n' +
                '## 🔗 Related Issues\n' +
                'Closes #(issue number)\n\n' +
                '## 📝 Additional Notes\n' +
                'Any additional information or context about this PR.';
              
              message = `📝 **Mixed Template Applied!**
              
              Your PR description has been automatically updated with the **Mixed Template**.
              
              **What's included:**
              - Both frontend and backend sections
              - Fill out the sections that apply to your changes`;
            }
            
            // Update PR description
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: newDescription
            });
            
            // Add comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
